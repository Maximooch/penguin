[build-system]
requires = ["setuptools>=76.1,<77", "wheel>=0.40.0"]
build-backend = "setuptools.build_meta"

[project]
name = "penguin-ai"
version = "0.2.2"
description = "Penguin: A modular, extensible AI coding agent and software engineer with its own execution environment."
readme = "README.md"
requires-python = ">=3.9"
authors = [
  { name="Maximus Putnam", email="MaximusPutnam@gmail.com" },
]
maintainers = [
  { name="Maximus Putnam", email="MaximusPutnam@gmail.com" },
]
# PEP 621-style license declaration ensures setuptools emits the proper
# 'License-File' metadata header accepted by Twine/PyPI.
license = { text = "AGPL-3.0-or-later" }
keywords = ["ai", "agent", "ai-agent", "llm", "llm-agent", "assistant", "cognitive-architecture", "code-generation", "developer-tool"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Code Generators",
]

# Core dependencies + CLI tools (included by default for great UX)
dependencies = [
    # Core Dependencies
    "tenacity>=8.0.1",
    "pydantic>=1.8.2",
    "python-dotenv>=0.19.0",
    "pyyaml>=5.4.0",
    "httpx>=0.24.0",
    "requests>=2.26.0",
    
    # LLM and API
    "litellm>=1.0.0",
    "anthropic>=0.3.0",
    "openai>=0.27.0",
    
    # CLI Tools (included by default for better UX)
    "rich>=10.0.0",
    "typer>=0.4.0",
    "questionary>=1.10.0",
    "textual>=0.52.0",
    
    # Core Processing
    "IPython",
    "ipykernel",
    "ipywidgets",
    "plotext",
    "matplotlib",
    "networkx",
    "watchdog>=2.3.0"
]

[project.optional-dependencies]
# Web interface and API server
web = [
    "fastapi>=0.68.0,<1.0",
    "uvicorn>=0.15.0",
    "websockets>=10.0",
    "jinja2>=3.0.0",
]

# Minimal install for library/embedding usage (overrides default dependencies)
minimal = [
    # Only core essentials
    "tenacity>=8.0.1",
    "pydantic>=1.8.2", 
    "python-dotenv>=0.19.0",
    "pyyaml>=5.4.0",
    "httpx>=0.24.0",
    "litellm>=1.0.0",
    "anthropic>=0.3.0",
    "openai>=0.27.0",
]

# Memory Providers
memory_lance = ["lancedb>=0.5.4", "pyarrow>=15.0.0"]
memory_faiss = [
    "faiss-cpu>=1.7.4",
    "numpy>=1.20.0",
    "sentence-transformers>=2.3.0",
]
memory_chroma = ["chromadb>=0.4.22"]

# LLM Providers  
llm_transformers = [
    "transformers>=4.38.0", 
    "torch>=2.0.0", 
    "accelerate>=0.25.0", 
    "bitsandbytes>=0.43.0; sys_platform != 'darwin'",
    "sentence-transformers>=2.3.0"
]
llm_ollama = ["ollama>=0.1.7"]

# Browser automation (currently using PyDoll, browser_use temporarily disabled)
browser = [
    "browser_use>=0.1.0; python_version>='3.11'",  # Requires Python 3.11+
    "playwright>=1.40.0",
    "pillow>=8.3.0"
]

# Development tools
dev = [
    "pytest>=6.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=21.0.0",
    "isort>=5.0.0",
    "ruff>=0.1.0",
    "build",
    "twine>=5.0.0",
    "wheel>=0.40.0",
    "setuptools>=76.1,<77",
    "pre-commit",
]

# Testing
test = [
    "pytest>=6.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]

# Full installation (everything)
all = [
    "penguin-ai[web,memory_lance,memory_faiss,memory_chroma,llm_transformers,llm_ollama,browser]"
]

[project.urls]
Homepage = "https://github.com/Maximooch/penguin"
Repository = "https://github.com/Maximooch/penguin"
Documentation = "https://penguin-rho.vercel.app"
"Bug Tracker" = "https://github.com/Maximooch/penguin/issues"

[project.scripts]
penguin = "penguin.cli.cli:app"
penguin-web = "penguin.web.server:main"

[tool.setuptools.packages.find]
include = ["penguin*"]
exclude = [
    "tests*", 
    "penguin.tests*", 
    "penguin.*.tests*",
    "penguin.*.test_*",
    "penguin.*.*test*",
]

[tool.setuptools]
include-package-data = true
# (No license-files to stop setuptools from generating lowercase 'license-file')

[tool.setuptools.package-data]
penguin = ["config.yml", "requirements.txt", "*.yml", "*.yaml"]

# Exclude specific files and patterns
[tool.setuptools.exclude-package-data]
"*" = [
    "test_*.py",
    "*_test.py", 
    "tests/*",
    "speedtest.py",
    "main.py",
    "possible_prompt.py",
    "run_web.py",
    "setup_venv.py",
    "IMG.jpg",
    ".env*",
    ".penguin_setup_complete",
    "*.log",
    ".pytest_cache/*",
    "notes/*",
    "tools/notes/*",
]

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.ruff]
line-length = 88
target-version = "py39" 